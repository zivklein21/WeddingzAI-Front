/* src/components/TodoList/TodoList.module.css */
html, body {
  height: 100%;
  margin: 0;
}

.tdlPage {
  padding-top: 90px;  
  width: 100%;
  height: 100vh;
  background: url('../../assets/images/main-bg.png') no-repeat center center;
  background-size: cover;
  background-color: #fff0f5;
  position: relative;
}

.tdlContainer {
  display: flex;
  position: relative;
  flex-direction: column;
  max-width: 1000px;
  overflow-y: auto; 
  margin: 0 auto;
  height: calc(100vh - 100px); 
  background: var(--wedding-white);
  border-radius: 16px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  padding: 40px 50px;
  margin-bottom: 20px;
  box-sizing: border-box;
}

.tdlHeader {
  font-size: 2rem;
  font-weight: 700;
  color: var(--wedding-black);
  margin-bottom: 1.5rem;
  border-bottom: 2px solid #ddd;
  padding-bottom: 0.5rem;
}

.backIcon {
  position: absolute;
  top: 20px;        
  right: 20px;      
  font-size: 1.5rem;
  color: var(--wedding-gray);
  cursor: pointer;
  transition: color 0.2s;
  z-index: 10;     
}
.backIcon:hover {
  color: var(--wedding-purple);
}


.tdlSection {
  overflow-y: auto;
  scrollbar-width: none;
}


.coupleNames,
.weddingDate {
  text-align: center;
  margin: 0.25rem 0;
  font-size: 1.1rem;
  color: var(--wedding-black);;
}

.todoSection {
  margin-top: 1.5rem;
  border: 1px solid var(--wedding-pink);
  border-radius: 8px;
}

.sectionHeader {
  background: var(--wedding-white);;
  padding: 0.75rem 1rem;
  display: flex;
  align-items: center;
  cursor: pointer;
}

.sectionHeader svg {
  margin-right: 0.5rem;
}

.sectionTitle {
  font-size: 1.2rem;
  font-weight: 600;
  margin: 0;
}

.todoList {
  list-style: none;
  padding: 0.5rem 0;
  margin: 0;
  justify-items: center;
}

.todoItem {
  padding: 0.5rem 1rem;
  width: 95%;

}

.taskRow {
  display: grid;
  grid-template-columns: 1fr auto auto;
  align-items: center;
  gap: 0.75rem;
  background: var(--wedding-pink);
  padding: 0.5rem;
  border-radius: 6px;
  position: relative;
  margin-bottom: 8px;
  border-left: 4px solid transparent;
  box-sizing: border-box;
}

.taskTitle {
  font-weight: 500;
}

.taskDate {
  font-size: 10px;
}

/* src/components/TodoList/TodoList.module.css */

/* …existing styles… */

.actions {
  display: flex;
  gap: 0.5rem;
}

.actions button {
  background: none;
  border: none;
  padding: 4px;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.2s;
}

/* specific color for AI button */
.aiBtn {
  color: var(--wedding-black);
  background-color: var(--wedding-pink) !important;
  box-shadow: none !important;
}

.aiBtn:hover {
  color: var(--wedding-dark-purple);
}

/* you can also tweak the info & delete buttons similarly */
.editBtn {
  color: var(--wedding-black);
  background-color: var(--wedding-pink) !important;
  box-shadow: none !important;
}

.editBtn:hover {
  color: var(--wedding-dark-purple);
}

.deleteBtn {
  color: var(--wedding-black);
  background-color: var(--wedding-pink) !important;
  box-shadow: none !important;
}

.deleteBtn:hover {
  color: var(--wedding-dark-purple);
}

.statusCheckbox {
  width: 20px;
  height: 20px;
  cursor: pointer;
}

.newTaskBtn {
  width: 100%;
  padding: 5px;
  background-color: var(--wedding-white) !important;
  border: none;
  color: var(--wedding-dark-purple);
  font-size: 1rem;
  box-shadow: none !important;
  cursor: pointer;
  text-align: left;
}

.newTaskBtn:hover {
  background-color: none !important;
}


.addTaskSection{
  justify-items: center;
  width: 100%;
}

.loading,
.noTasks {
  text-align: center;
  font-size: 1.2rem;
  color: #888;
}

.statusCheckbox {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  width: 12px;
  height: 12px;
  border: 1px solid #000;      /* גבול שחור דק */
  border-radius: 50%;          /* עיגול */
  background-color: #fff;      /* לבן כשהוא לא מסומן */
  cursor: pointer;
  position: relative;
  transition: background-color 0.2s;
}

.statusCheckbox:checked {
  background-color: #000;      /* שחור כשהוא מסומן */
}

/* ה־checkmark הלבן באמצע */
.statusCheckbox::after {
  content: "✔";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 8px;              /* גודל קטן יותר */
  color: #fff;
  opacity: 0;
  transition: opacity 0.2s;
}

.statusCheckbox:checked::after {
  opacity: 1;
}


/* TaskModal.css */
.overlay {
  position: fixed;
  top: 0; left:0; right:0; bottom:0;
  background: rgba(0,0,0,0.5);
  display: flex; align-items: center; justify-content: center;
  z-index: 1000;
}

.modal {
  background: white;
  padding: 1.5rem;
  border-radius: 8px;
  max-width: 600px;
  margin: auto;
  width: 450px;
}

.buttons {
  display: flex; justify-content: center; gap: 0.5rem;
  margin-top: 1rem;
}

.btn {
  padding: 0.5rem 1rem;
  border: none; border-radius: 4px;
  cursor: pointer;
}

blockquote {
  margin: 0.5rem 0;
  padding: 0.5rem 1rem;
  background: #f3f4f6;
  border-left: 4px solid #ccc;
}

.modalTitle {
  text-align: center;
  margin-bottom: 1rem;
}

.modalBody {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-bottom: 1.5rem;
}

.textareaInput {
  width: 100%;
  box-sizing: border-box;
  padding: 0.75rem;
  font-size: 1rem;
  height: 6em;
  resize: none;
  border: 1px solid #ccc;
  border-radius: 4px;
}

.controlRow {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 0.75rem;
}

.controlInputSmall {
  padding: 0.5rem 0.75rem;
  font-size: 0.9rem;
  height: 2.5rem;
  box-sizing: border-box;
  border: 1px solid #ccc;
  border-radius: 4px;
}

.buttonRowCentered {
  display: flex;
  justify-content: center;
  gap: 1rem;
}

.footerRow input[type="date"] {
  flex: 1;
  margin-right: 0.5rem;
}

.footerRow select {
  flex: 0;
}

.footerRow {
  display: flex;
  justify-content: space-between;
  align-content: center;
  gap: 10px ;
  margin-top: 1rem;
}


.cancelBtn,
.saveBtn {
  height: 2.5rem;
  line-height: 2.5rem;
  padding: 0 1rem;
}

.modalBody {
  gap: 0.5rem;
}

.savingText {
  margin-left: 0.5rem;
  font-size: 0.9rem;
  font-style: italic;
  color: #666;
}

.spinner {
  font-size: 40px;
  color: var(--wedding-purple);
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}